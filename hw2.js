"use strict";

/* 1. Объясните почему код даёт именно такие результаты?
Подсказка. Чтобы лучше разобраться возьмите этот код и запустите в отладчике в браузере со включенными точками остановки. */

//пример 1
let a = 1, b = 1, c, d;
c = ++a;
alert(c); // ответ: 2. Префиксный инкремент: сначала увеличивается значение переменной а на 1, затем значение присваивается с

//пример 2
d = b++;
alert(d); //ответ: 1. Постфиксный инкремент: сначала сначала знач. переменной b присвается d, затем b увеличивается на 1.

//пример 3
c = 2 + ++a;
alert(c); //ответ: 5. Текущее знач. переменной а = 2, увеличивается на 1, прибавляется 2.

//пример 4
d = 2 + b++;
alert(d); //ответ: 4. Сначала складывается текущее знач. переменной b = 2 и 2, затем b увеличивается на 1. 

alert(a); //3 см. выше
alert(b); //3 см. выше

/* 2. Чему будут равны переменные x и a2 в примере ниже? Написать почему так произошло
(описать последовательность действий).*/

/* Сначала выполняем действие в скобках: умножаем переменную а2 на 2, получаем 4.
Складываем 1 и 4, получаем 5.
Итого a2 = 4, x = 5 */

let a2 = 2;
let x = 1 + (a2 *= 2);

/* 3. Объявить две переменные a3 и b3 и задать им целочисленные произвольные начальные
значения.
Затем написать скрипт, который работает по следующему принципу:
- если a3 и b3 положительные, вывести их разность (ноль можно считать положительным числом);
- если а3 и b3 отрицательные, вывести их произведение;
- * (этот пункт по сложнее, делайте по желанию) если а3 и b3 разных знаков, вывести их сумму; */

let a3 = 10;
let b3 = 15;
if (a3 >= 0 && b3 >= 0) {
    console.log(a3 - b3);
} else if (a3 < 0 && b3 < 0) {
    console.log(a3 * b3);
} else {
    console.log(a3 + b3);
}


/*
4. Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя
параметрами. Т.е. например, функция для сложения должна принимать два числа, складывать их и возвращать результат.

Обязательно использовать оператор return.*/

/**
 * Функция принимает два числа, складывает их и возвращает результат. 
 * @param {number} a4 первое число, которое принимает функция 
 * @param {number} b4 второе число, которое принимает функция 
 * @returns {number} возвращает сумму параметров
 */
function showSum(a4, b4) {
    return a4 + b4;
}

console.log(showSum(5, 2));

/**
 * Функция принимает два числа, вычитает из первого второе и возвращает результат. 
 * @param {number} a4 первое число, которое принимает функция 
 * @param {number} b4 второе число, которое принимает функция 
 * @returns {number} возвращает разность параметров
 */
function showDiff(a4, b4) {
    return a4 - b4;
}

console.log(showDiff(5, 2));

/**
 * Функция принимает два числа, перемножает их и возвращает результат. 
 * @param {number} a4 первое число, которое принимает функция 
 * @param {number} b4 второе число, которое принимает функция 
 * @returns {number} возвращает произведение параметров
 */
function showMul(a4, b4) {
    return a4 * b4;
}

console.log(showMul(5, 2));

/**
 * Функция принимает два числа, делит первое на второе и возвращает результат. 
 * @param {number} a4 первое число, которое принимает функция 
 * @param {number} b4 второе число, которое принимает функция 
 * @returns {number} возвращает частность от деления
 */
function showDiv(a4, b4) {
    return a4 / b4;
}

console.log(showDiv(5, 2));


/* 5. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от
переданного значения операции (использовать switch) выполнить одну из арифметических операций
(использовать функции из задания 4) и вернуть полученное значение.
*/

/**
 * Функция принимает в качестве первого и второго параметров число, в качестве третьего - название математической операции 
 * (сложение, вычитание, умножение, деление), возвращает результат вычисления
 * @param {number} arg1 первое число, которое принимает функция параметром 
 * @param {number} arg2 второе число, которое принимает функция параметром 
 * @param {string} operation название математической операции (сложение, вычитание, умножение, деление)
 * @throws {Error} будет выброшена ошибка, если математич. операция не предусмотрена 
 * @returns {string} возвращает результат вычисления
 */
function mathOperation(arg1, arg2, operation) {
    switch(operation) {
        case "сложение":
            return showSum(arg1, arg2);
        case "вычитание":
            return showDiff(arg1, arg2);
        case "умножение":
            return showMul(arg1, arg2);
        case "деление":
            return showDiv(arg1, arg2);
        default: 
            throw new Error("нет такой операции");
    }    
}

console.log(mathOperation(10, 15, "сложение"));
console.log(mathOperation(10, 15, "вычитание"));
console.log(mathOperation(10, 15, "умножение"));
console.log(mathOperation(10, 15, "деление"));
console.log(mathOperation(10, 15, "hey"));